version: "3"
services:
  app:
    build:
      args:
        user: sso
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      #- laravel-files:/var/www/storage/app/public
    networks:
      - laravel

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - laravel

  supervisor:
    image: laravel-app
    networks:
      - laravel
    depends_on:
      - app
      - nginx
    command: supervisor

  vsftpd:
    image: panubo/vsftpd
    environment:
      - FTP_USER=sso
      - FTP_PASSWORD=A123salud
    volumes:
      - /mnt/storage/media:/srv
    expose:
      - 21
    network_mode: host

  db:
    image: mysql:8
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel

  cron:
    image: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: |
      sh -c "mkdir -p /etc/crontabs && echo '* * * * * cd /var/www && php artisan schedule:run >> /dev/null 2>&1' > /etc/crontabs/root && crond -f"
    networks:
      - laravel

networks:
  laravel:
    driver: bridge
volumes:
  mysql-data:
  #laravel-files:
